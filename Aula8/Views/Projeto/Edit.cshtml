@model Aula8.Models.Projeto

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Projeto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.NomeDoProjeto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomeDoProjeto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomeDoProjeto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DescrisaoDoProjeto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DescrisaoDoProjeto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescrisaoDoProjeto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataDeInicioDoProjeto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataDeInicioDoProjeto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataDeInicioDoProjeto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataDeTerminoDoProjeto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataDeTerminoDoProjeto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataDeTerminoDoProjeto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EstadoDoProjeto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EstadoDoProjeto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EstadoDoProjeto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <dt>
            @Html.DisplayNameFor(model => model.Usuarios)
        </dt>

        <dd>
            @Html.ActionLink("Excluir Participantes do Projeto", "AlterarParticipantesDoProjeto", new { id = Model.Id })
        </dd>

        <dd>
            @Html.ActionLink("Adicionar Participantes no Projeto", "AdicionarParticipantesDoProjeto", new { id = Model.Id })
        </dd>
    </div>

    <div class="form-group">
        <dt>
            Tarefas
        </dt>

        <dd>
            @Html.ActionLink("Excluir Tarefas no Projeto", "ExcluirTarefaDoProjeto", new { id = Model.Id })
        </dd>

        <dd>
            @Html.ActionLink("Adicionar Tarefas no Projeto", "Adicionar","Tarefa", new { id = Model.Id },null)
        </dd>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
